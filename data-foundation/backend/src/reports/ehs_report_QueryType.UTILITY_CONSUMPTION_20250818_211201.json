{
  "metadata": {
    "title": "EHS Data Extraction Report - QueryType.UTILITY_CONSUMPTION",
    "generated_at": "2025-08-18T21:12:01.423705",
    "query_type": "utility_consumption",
    "parameters": {},
    "output_format": "json"
  },
  "summary": {
    "total_queries": 2,
    "successful_queries": 1,
    "failed_queries": 1,
    "total_records": 0,
    "graph_objects": [
      {
        "nodes": [
          {
            "labels": [
              "Document",
              "Waterbill"
            ],
            "count": 2
          },
          {
            "labels": [
              "WaterBill"
            ],
            "count": 2
          },
          {
            "labels": [
              "Facility"
            ],
            "count": 3
          },
          {
            "labels": [
              "Customer"
            ],
            "count": 3
          },
          {
            "labels": [
              "UtilityProvider"
            ],
            "count": 3
          },
          {
            "labels": [
              "Meter"
            ],
            "count": 4
          },
          {
            "labels": [
              "Emission"
            ],
            "count": 3
          },
          {
            "labels": [
              "DocumentChunk"
            ],
            "count": 3
          },
          {
            "labels": [
              "__Node__",
              "Chunk"
            ],
            "count": 6
          },
          {
            "labels": [
              "__Node__",
              "__Entity__",
              "entity"
            ],
            "count": 19
          },
          {
            "labels": [
              "Document",
              "Utilitybill"
            ],
            "count": 1
          },
          {
            "labels": [
              "UtilityBill"
            ],
            "count": 1
          }
        ],
        "relationships": [
          {
            "type": "EXTRACTED_TO",
            "count": 3
          },
          {
            "type": "BILLED_TO",
            "count": 6
          },
          {
            "type": "BILLED_FOR",
            "count": 6
          },
          {
            "type": "PROVIDED_BY",
            "count": 4
          },
          {
            "type": "MONITORS",
            "count": 11
          },
          {
            "type": "RECORDED_IN",
            "count": 5
          },
          {
            "type": "RESULTED_IN",
            "count": 3
          },
          {
            "type": "MENTIONS",
            "count": 19
          },
          {
            "type": "Is",
            "count": 10
          },
          {
            "type": "SOURCE",
            "count": 3
          }
        ],
        "total_nodes": 50,
        "total_relationships": 70
      }
    ]
  },
  "queries_executed": [
    {
      "query": "\n                MATCH (d:Document:UtilityBill)-[:EXTRACTED_TO]->(b:UtilityBill)\n                RETURN d, b\n                ORDER BY b.billing_period_end DESC\n                ",
      "parameters": {}
    },
    {
      "query": "\n                MATCH (b:UtilityBill)\n                WHERE b.billing_period_start >= $start_date \n                  AND b.billing_period_end <= $end_date\n                RETURN SUM(b.total_kwh) as total_consumption,\n                       AVG(b.total_cost) as avg_cost,\n                       COUNT(b) as bill_count\n                ",
      "parameters": {}
    }
  ],
  "query_results": [
    {
      "query": "\n                MATCH (d:Document:UtilityBill)-[:EXTRACTED_TO]->(b:UtilityBill)\n                RETURN d, b\n                ORDER BY b.billing_period_end DESC\n                ",
      "parameters": {},
      "results": [],
      "record_count": 0,
      "status": "success"
    },
    {
      "query": "\n                MATCH (b:UtilityBill)\n                WHERE b.billing_period_start >= $start_date \n                  AND b.billing_period_end <= $end_date\n                RETURN SUM(b.total_kwh) as total_consumption,\n                       AVG(b.total_cost) as avg_cost,\n                       COUNT(b) as bill_count\n                ",
      "parameters": {},
      "error": "{code: Neo.ClientError.Statement.ParameterMissing} {message: Expected parameter(s): start_date, end_date}",
      "status": "failed"
    }
  ],
  "analysis": {
    "Key Findings": {
      "1": "Two queries were executed, one was successful and the other failed.",
      "2": "The successful query was intended to retrieve utility bill documents and their corresponding utility bills, but it returned no records.",
      "3": "The failed query was intended to calculate the total consumption, average cost, and bill count for a specified billing period. The failure was due to missing parameters: start_date and end_date."
    },
    "Patterns or Trends": {
      "1": "There is no pattern or trend observable from the data as no records were retrieved from the successful query and the other query failed."
    },
    "Potential Data Quality Issues": {
      "1": "The successful query returned no records, indicating that there may be no utility bill documents linked to utility bills in the database.",
      "2": "The failed query indicates that the required parameters (start_date and end_date) were not provided. This could be due to a lack of data validation or error handling in the query execution process."
    },
    "Recommendations": {
      "1": "Check the database to ensure that utility bill documents are correctly linked to utility bills.",
      "2": "Ensure that all required parameters are provided before executing a query. Implement data validation and error handling mechanisms to prevent query failures due to missing parameters.",
      "3": "If the lack of records is due to the time of query (e.g., new billing period), schedule queries to run at a time when data is likely to be available."
    }
  },
  "errors": []
}